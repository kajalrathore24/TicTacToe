{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kajal\\\\OneDrive\\\\Desktop\\\\Gaming website\\\\tic-tac-toe\\\\src\\\\TictactoeGame\\\\Board.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [state, setState] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXTurn] = useState(false);\n  const checkWinner = () => {\n    const counter = 0;\n    const winnerLogic = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let logic of winnerLogic) {\n      const [a, b, c] = logic;\n      if (state[a] != null && state[a] === state[b] && state[a] === state[c]) {\n        return state[a];\n      }\n      counter;\n    }\n    return false;\n  };\n  const isWinner = checkWinner();\n  const handleClick = index => {\n    if (state[index] !== null) {\n      return true;\n    }\n    const copyState = [...state]; //split operator makes the copy of existing state\n    copyState[index] = isXTurn ? 'X' : '0';\n    setState(copyState);\n    setIsXTurn(!isXTurn);\n  };\n\n  // console.log(\"State\",state)\n\n  const handleReset = () => {\n    setState(Array(9).fill(null));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: isWinner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isWinner, \" won the game\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Play again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true) : {\n      isWinner\n    }( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Player \", isXTurn ? 'X' : '0', \" please move\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(0),\n          value: state[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(1),\n          value: state[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(2),\n          value: state[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(3),\n          value: state[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(4),\n          value: state[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(5),\n          value: state[5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(6),\n          value: state[6]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(7),\n          value: state[7]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(8),\n          value: state[8]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"vsHuHMoQwTu/MZs5rY55ECxOrDk=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Square","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","state","setState","Array","fill","isXTurn","setIsXTurn","checkWinner","counter","winnerLogic","logic","a","b","c","isWinner","handleClick","index","copyState","handleReset","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["C:/Users/kajal/OneDrive/Desktop/Gaming website/tic-tac-toe/src/TictactoeGame/Board.jsx"],"sourcesContent":["import React,{ useState } from 'react'\r\nimport Square from './Square'\r\n\r\nconst Board=() => {\r\n    const [state,setState]=useState(Array(9).fill(null))\r\n    const [isXTurn, setIsXTurn]=useState(false);\r\n\r\n    const checkWinner= ()=>{\r\n      const counter=0;\r\n      const winnerLogic=[\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6],\r\n      ];\r\n      for(let logic of winnerLogic){\r\n        const [a,b,c]=logic;\r\n        if(state[a]!=null && state[a]===state[b] && state[a]===state[c]){\r\n          return state[a];\r\n        }\r\n        counter\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const isWinner=checkWinner();\r\n    \r\n    const handleClick = (index) =>{\r\n      if(state[index]!==null){\r\n        return true;\r\n      }\r\n        const copyState= [...state];    //split operator makes the copy of existing state\r\n        copyState[index]=isXTurn?'X':'0';\r\n        setState(copyState);\r\n        setIsXTurn(!isXTurn);\r\n    }\r\n    \r\n    // console.log(\"State\",state)\r\n\r\n    const handleReset=()=>{\r\n      setState(Array(9).fill(null));\r\n    }\r\n  return (\r\n    <div className='board-container'>\r\n      {\r\n        isWinner?(\r\n        <>\r\n        {isWinner} won the game<button onClick={handleReset}>Play again</button></>\r\n        ):{isWinner}(\r\n        <>\r\n        <h4>Player {isXTurn?'X':'0'} please move</h4>\r\n        <div className='board-row'>\r\n        <Square onClick={() => handleClick(0)} value={state[0]} />\r\n        <Square onClick={() => handleClick(1)} value={state[1]} />\r\n        <Square onClick={() => handleClick(2)} value={state[2]} />\r\n      </div>\r\n      <div className='board-row'>\r\n        <Square onClick={() => handleClick(3)} value={state[3]} />\r\n        <Square onClick={() => handleClick(4)} value={state[4]} />\r\n        <Square onClick={() => handleClick(5)} value={state[5]} />\r\n      </div>\r\n      <div className='board-row'>\r\n        <Square onClick={() => handleClick(6)} value={state[6]} />\r\n        <Square onClick={() => handleClick(7)} value={state[7]} />\r\n        <Square onClick={() => handleClick(8)} value={state[8]} />\r\n      </div>\r\n      \r\n      </>\r\n      )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}